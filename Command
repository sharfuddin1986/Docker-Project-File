###### Docker All Command #####


install docker  =   docker.io       
pull image      =   docker pull <image name>
push image      =   docker push username/newimagename
version check   =   docker --version ,docker -v, docker version
Run container   =   docker run -dit --name <container name> -p 82:80 <imsge name>
inside container=   docker exec -it <continer id> /bin/bash
kill container  =   docker kill <continer id>
stop container  =   docker stop <container id>
start container =   docker start <continer id>
container list  =   docker ps -a
image list      =   docker images
remove container=   docker rm <container id>
forceily remove =   docker rm -f
allcontainer remove docker rm -f $<sudo docker ps -a -q>
remmove images  =   docker rmi <image name>
detail of contner   docker inspect <container id>
continer to image   docker commit <contained id> <dockerhub username/image name any>
login           =   docker login
create volume   =   docker volume create <name volume>
mount volume    =   docker run -it --mount <source>,<destination> -d <container name>

##### docker file #####

FROM ubuntu
RUN apt-get update -y
RUN apt-get install apache2 -y
ADD . /var/www/html
ENTRYPOINT apachectl -D FOREGROUND
ENV name Devop sharfuddin

docker file build command = docker build . -t <docker file name/any new name>

###### link container command ####

 docker run -it --name <container1> -d ubuntu                       conatiner1 is created

 docker run -it --name <container2> --link <container1> -d <image name>
 docker exec -it container2 /bin/bash
 cat /etc/hosts
 After that i can see here two  ip address one is container2 is connected with container1



docker service create --name <name of service> --replicas <no of replica> -p 80:80 <image name>
create service for nginx cluster with 3 replica
docker swarm init --adverties -addr=<ip address of leader>
after that get link to connect node machine

docker node ls <all node list>
docker swarm leave --force  <cancel swarm service>





